import React, { useEffect, useRef } from "react";
import QrReader from "react-qr-scanner";
import { useState } from "react";
import {
  Paper,
  Typography,
  CircularProgress,
  Divider,
  TextField,
  Button,
  Grid,
  TextareaAutosize,
} from "@material-ui/core";
import Txn from "./Txn.js";
import { useDispatch, useSelector } from "react-redux";
import { logTime } from "../../actions/attendance";
import { getTxns } from "../../actions/transactions";
/*@brief: Render QR Scanner Page
 * @author: Justin To, Daniel Capinpin, Chelsea Alabanza, and Janielle Enrqiuez
 */
import useStyles from "./styles";

const QR = () => {
  const log = useSelector((state) => state.log);
  const dispatch = useDispatch();
  const [status, setStatus] = useState(true);

  /*@brief: handling of error
   * @params: error
   * error: error found
   * @author: Justin To, Daniel Capinpin, Chelsea Alabanza, and Janielle Enrqiuez
   */
  const classes = useStyles();

  const handleErrorFile = (error) => {
    console.log(error);
  };

  /*@brief: handling of successful scan
   * @params: result
   * error: scanned result
   * @author: Justin To, Daniel Capinpin, Cara Alabanza, and Janielle Enriquez
   */
  const handleScanFile = (result) => {
    if (result) {
      try {
        result = JSON.parse(result.text); //check if qr is valid and generated by our system
        console.log(result);
        if (result.userID && result.txnID && result.postID && status) {
          setStatus(false);
          dispatch(logTime(result));
        }
      } catch (error) {
        console.log(error);
      }
    }
  };
  /*@brief: set status to be true
   * @author: Justin To, Daniel Capinpin, Cara Alabanza, and Janielle Enriquez
   */
  const setTrue = () => {
    setStatus(true);
    window.location.reload(false);
  };

  return (
    <div className={classes.div1}>
      <Grid container alignItems="stretch" spacing={3}>
        <Grid item xs={12} sm={11} md={10}>
          <Typography className={classes.title2} variant="h2">
            Scan QR Code:
          </Typography>
        </Grid>
        <Grid item xs={12} sm={11} md={8}>
          {console.log(status)}
          {!status ? (
            <>
              <Typography className={classes.text2} variant="h5">
                {" "}
                Scan Again?{" "}
              </Typography>
              <Button
                className={classes.button}
                type="submit"
                variant="contained"
                onClick={setTrue}
              >
                Yes
              </Button>
            </>
          ) : null}
        </Grid>
      </Grid>

      <Grid container alignItems="stretch" spacing={3}>
        <Grid item xs={12} sm={6} md={7}>
          {log ? (
            <Typography className={classes.text1}>
              {JSON.stringify(log)}
            </Typography>
          ) : null}
        </Grid>

        <QrReader
          className={classes.qr}
          delay={300}
          style={{ width: "800px", height: "500px" }}
          onError={handleErrorFile}
          onScan={handleScanFile}
        />
      </Grid>
    </div>
  );
};

export default QR;
